1. When would you want to use a remote repository rather than keeping all your work local?
When sharing work with other people. 
For back-up of my work on cloud, rather than just my hard drive.

2. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Because if it is a public repository on Git Hub, I may not want all the changes pulled to my remote repository on my hard drive.
I can also check and make changes when it's appropriate.. I think.

3. Describe the difference between forks, clones, and branches. When would you use one instead of the other?

Forks - cloning another repository on Git Hub, onto GitHub. This is built in to GitHub, so we give credit to the original author, and don't have to clone to my computer, then push to a new repo on GitHub.

Clones - cloning a repository on github onto my local repository on my computer. This is used so I can edit files, i.e. code that I can't effectively edit on GitHub, in the repository on my computer, then can push back to github.

Branches - creating a new part of a file/game/something. This is not a copy of existing work or files, it is separating a line of editing of work so that you can work on two pieces of the same file, or two people can work on different aspects, then merge them together later.

4. What is the benefit of having a copy of hte last known state of the remote stored locally?
I can edit it without internet connection, and continue with my work. When I get back to a connection I can use git pull or git fetch/git merge to merge the changes.

5. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
In word I collaborate with others by using 'Tracked changes', but I often wish there was a better version control option to see what changes were being made by each person, and a simple way to compare files. We end up with many many versions of files with people's initials. This is harder than git hub.

It's easier using git and git hub to track changes made by each person, though that comment to Caroline telling her to correct a typo felt tedious. I understand the purpose. 

Generally git/git hub seem to make version control and collaboration on files much more intuitive and much easier to correct errors.

6. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
When I'm working with other people I would want to make changes in a separate branch, then use a pull request so they can review before accepting changes to the master copy. 
If I'm working alone, it would save time to make changes directly in master, unless I'm working on a side feature that I want to keep separate.